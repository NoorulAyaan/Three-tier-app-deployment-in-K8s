name: Three-Tier CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - run: cd frontend && npm install && npm install react-router-dom@6
      - run: cd frontend && npm ci 
      - run: cd frontend && npm run build --if-present
      - run: cd frontend && npm test --if-present

  build-backend:
    runs-on: ubuntu-latest
    needs: build-frontend
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand({ ping: 1 })'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Dependencies
        run: cd backend && npm ci

      - name: Wait for MongoDB to be Ready
        run: |
          for i in {1..10}; do
            if mongosh mongodb://127.0.0.1:27017 --eval "db.runCommand({ ping: 1 })"; then
              echo "MongoDB is up!"
              exit 0
            fi
            echo "Waiting for MongoDB..."
            sleep 5
          done
          echo "MongoDB did not start in time"
          exit 1

      - name: Build Backend
        run: cd backend && npm run build --if-present

      - name: Run Tests
        run: cd backend && npm test --if-present